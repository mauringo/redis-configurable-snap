name: redis-configurable
adopt-info: redis
summary: Redis is used as a database, cache and message broker. # 79 char long summary
description: |
  Configurable using Jupyter Notebook at port 9876 /jupyter
  
  Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache and message broker. |
  It supports data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs, geospatial indexes with radius queries and streams. |
  Redis has built-in replication, Lua scripting, LRU eviction, transactions and different levels of on-disk persistence, and provides high availability via Redis Sentinel and automatic partitioning with Redis Cluster. |
  |
  Check out https://redis.io/ for more information.

grade: stable # must be 'stable' to release into candidate/stable channels
confinement: strict # use 'strict' once you have the right plugs and slots
base: core20


architectures:
  - build-on: amd64
  - build-on: arm64


apps:

  jupyter:
     command: bin/jupyter.wrapper
     daemon: simple
     plugs:
       - network-bind
       - network-status
       - network-observe
       - serial-port

  server:
    command: usr/bin/redis-server $SNAP_COMMON/REDIS/redis.conf
    daemon: simple
    restart-condition: always
    plugs:
      - network
      - network-bind
      - network-observe
      - home
  cli:
    command: usr/bin/redis-cli
    plugs:
      - network
      - network-bind
      - network-observe
      - home
  benchmark:
    command: usr/bin/redis-benchmark
    plugs:
      - network
      - network-bind
      - network-observe
      - home
  check-aof:
    command: usr/bin/redis-check-aof
    plugs:
      - network
      - network-bind
      - network-observe
      - home
  check-rdb:
    command: usr/bin/redis-check-rdb
    plugs:
      - network
      - network-bind
      - network-observe
      - home
  sentinel:
    command: usr/bin/redis-sentinel
    plugs:
      - network
      - network-bind
      - network-observe
      - home

parts:

 
  shscripts:  
    source: ./shscripts/
    plugin: dump
    organize:
      '*': bin/
      

  jupyter:
    plugin: python
    build-environment:
      - PYTHONPATH: "$SNAPCRAFT_PART_INSTALL/usr/lib/python3/dist-packages"

    stage-packages:
      - python3-wheel
      
    python-packages:
      - jupyterlab
      - jupyterlab-system-monitor

 
    build-packages:
      - python3-dev
      - python3-wheel
      - build-essential
      - python3-setuptools

  embed-conf:  
    source: ./conf/
    plugin: dump
    organize:
      '*': bin/REDIS/
      
  redis:
    plugin: make
    source: https://github.com/redis/redis/archive/7.0.5.tar.gz
    override-build: |
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/usr
      export CC=${SNAPCRAFT_ARCH_TRIPLET}-gcc
      export DEB_HOST_GNU_TYPE=${SNAPCRAFT_ARCH_TRIPLET}
      make -j4 BUILD_TLS=yes
      PREFIX=${SNAPCRAFT_PART_INSTALL}/usr make BUILD_TLS=yes install
      VER=`sed -n 's/^.* REDIS_VERSION "\(.*\)"$/\1/g p' < src/version.h`
      if [ "$VER" = "999.999.999" ]; then
          GITSHA=`sed -n 's/^.* REDIS_GIT_SHA1 "\(.*\)"$/\1/g p' < src/release.h`
          VER="unstable-$GITSHA"
      fi
      snapcraftctl set-version $VER
    build-packages:
      - to arm64:
        - libssl-dev:arm64
      - to amd64:
        - libssl-dev:amd64
